document.addEventListener("DOMContentLoaded",()=>{if(!CONFIG.path)return void console.warn("`hexo-generator-searchdb` plugin is not installed!");let datas,isfetched=!1;const input=document.querySelector(".search-input"),getIndexByWord=(words,text,caseSensitive=!1)=>{const index=[],included=new Set;return words.forEach(word=>{if(CONFIG.localsearch.unescape){const div=document.createElement("div");div.innerText=word,word=div.innerHTML}const wordLen=word.length;if(0===wordLen)return;let startPosition=0,position=-1;for(caseSensitive||(text=text.toLowerCase(),word=word.toLowerCase());(position=text.indexOf(word,startPosition))>-1;)index.push({position:position,word:word}),included.add(word),startPosition=position+wordLen}),index.sort((left,right)=>left.position!==right.position?left.position-right.position:right.word.length-left.word.length),[index,included]},mergeIntoSlice=(start,end,index)=>{let item=index[0],{position:position,word:word}=item;const hits=[],count=new Set;for(;position+word.length<=end&&0!==index.length;){count.add(word),hits.push({position:position,length:word.length});const wordEnd=position+word.length;for(index.shift();0!==index.length&&(position=(item=index[0]).position,word=item.word,wordEnd>position);)index.shift()}return{hits:hits,start:start,end:end,count:count.size}},highlightKeyword=(val,slice)=>{let result="",index=slice.start;for(const{position:position,length:length}of slice.hits)result+=val.substring(index,position),index=position+length,result+=`<mark class="search-keyword">${val.substr(position,length)}</mark>`;return result+=val.substring(index,slice.end)},inputEventFunction=()=>{if(!isfetched)return;const searchText=input.value.trim().toLowerCase(),keywords=searchText.split(/[-\s]+/),container=document.querySelector(".search-result-container");let resultItems=[];if(searchText.length>0&&(resultItems=(keywords=>{const resultItems=[];return datas.forEach(({title:title,content:content,url:url})=>{const[indexOfTitle,keysOfTitle]=getIndexByWord(keywords,title),[indexOfContent,keysOfContent]=getIndexByWord(keywords,content),includedCount=new Set([...keysOfTitle,...keysOfContent]).size,hitCount=indexOfTitle.length+indexOfContent.length;if(0===hitCount)return;const slicesOfTitle=[];0!==indexOfTitle.length&&slicesOfTitle.push(mergeIntoSlice(0,title.length,indexOfTitle));let slicesOfContent=[];for(;0!==indexOfContent.length;){const item=indexOfContent[0],{position:position}=item,start=Math.max(0,position-20),end=Math.min(content.length,position+80);slicesOfContent.push(mergeIntoSlice(start,end,indexOfContent))}slicesOfContent.sort((left,right)=>left.count!==right.count?right.count-left.count:left.hits.length!==right.hits.length?right.hits.length-left.hits.length:left.start-right.start);const upperBound=parseInt(CONFIG.localsearch.top_n_per_article,10);upperBound>=0&&(slicesOfContent=slicesOfContent.slice(0,upperBound));let resultItem="";(url=new URL(url,location.origin)).searchParams.append("highlight",keywords.join(" ")),0!==slicesOfTitle.length?resultItem+=`<li><a href="${url.href}" class="search-result-title">${highlightKeyword(title,slicesOfTitle[0])}</a>`:resultItem+=`<li><a href="${url.href}" class="search-result-title">${title}</a>`,slicesOfContent.forEach(slice=>{resultItem+=`<a href="${url.href}"><p class="search-result">${highlightKeyword(content,slice)}...</p></a>`}),resultItem+="</li>",resultItems.push({item:resultItem,id:resultItems.length,hitCount:hitCount,includedCount:includedCount})}),resultItems})(keywords)),1===keywords.length&&""===keywords[0])container.classList.add("no-result"),container.innerHTML='<div class="search-result-icon"><i class="fa fa-search fa-5x"></i></div>';else if(0===resultItems.length)container.classList.add("no-result"),container.innerHTML='<div class="search-result-icon"><i class="far fa-frown fa-5x"></i></div>';else{resultItems.sort((left,right)=>left.includedCount!==right.includedCount?right.includedCount-left.includedCount:left.hitCount!==right.hitCount?right.hitCount-left.hitCount:right.id-left.id);const stats=CONFIG.i18n.hits.replace(/\$\{hits}/,resultItems.length);container.classList.remove("no-result"),container.innerHTML=`<div class="search-stats">${stats}</div>\n        <hr>\n        <ul class="search-result-list">${resultItems.map(result=>result.item).join("")}</ul>`,window.pjax&&window.pjax.refresh(container)}},fetchData=()=>{const searchPath=CONFIG.root+CONFIG.path,isXml=!CONFIG.path.endsWith("json");fetch(searchPath).then(response=>response.text()).then(res=>{isfetched=!0,datas=(datas=isXml?[...(new DOMParser).parseFromString(res,"text/xml").querySelectorAll("entry")].map(element=>({title:element.querySelector("title").textContent,content:element.querySelector("content").textContent,url:element.querySelector("url").textContent})):JSON.parse(res)).filter(data=>data.title).map(data=>(data.title=data.title.trim(),data.content=data.content?data.content.trim().replace(/<[^>]+>/g,""):"",data.url=decodeURIComponent(data.url).replace(/\/{2,}/g,"/"),data)),inputEventFunction()})},highlightSearchWords=()=>{const params=(()=>{const s=location.search,parts=s.substr(s.indexOf("?")+1).split("&"),result={};for(const part of parts){const[key,value]=part.split("=",2);key in result?result[key].push(value):result[key]=[value]}return result})(),keywords=params.highlight?params.highlight[0].split(/\+/).map(decodeURIComponent):[],body=document.querySelector(".post-body");if(!keywords.length||!body)return;const walk=document.createTreeWalker(body,NodeFilter.SHOW_TEXT,null,!1),allNodes=[];for(;walk.nextNode();)walk.currentNode.parentNode.matches("button, select, textarea")||allNodes.push(walk.currentNode);allNodes.forEach(node=>{const[indexOfNode]=getIndexByWord(keywords,node.nodeValue);indexOfNode.length&&((node,slice,className)=>{const val=node.nodeValue;let index=slice.start;const children=[];for(const{position:position,length:length}of slice.hits){const text=document.createTextNode(val.substring(index,position));index=position+length;const mark=document.createElement("mark");mark.className=className,mark.appendChild(document.createTextNode(val.substr(position,length))),children.push(text,mark)}node.nodeValue=val.substring(index,slice.end),children.forEach(element=>{node.parentNode.insertBefore(element,node)})})(node,mergeIntoSlice(0,node.nodeValue.length,indexOfNode),"search-keyword")})};CONFIG.localsearch.preload&&fetchData(),"auto"===CONFIG.localsearch.trigger?input.addEventListener("input",inputEventFunction):(document.querySelector(".search-icon").addEventListener("click",inputEventFunction),input.addEventListener("keypress",event=>{"Enter"===event.key&&inputEventFunction()})),document.querySelectorAll(".popup-trigger").forEach(element=>{element.addEventListener("click",()=>{document.body.classList.add("search-active"),setTimeout(()=>input.focus(),500),isfetched||fetchData()})});const onPopupClose=()=>{document.body.classList.remove("search-active")};document.querySelector(".search-pop-overlay").addEventListener("click",event=>{event.target===document.querySelector(".search-pop-overlay")&&onPopupClose()}),document.querySelector(".popup-btn-close").addEventListener("click",onPopupClose),document.addEventListener("pjax:success",()=>{highlightSearchWords(),onPopupClose()}),window.addEventListener("keyup",event=>{"Escape"===event.key&&onPopupClose()})});