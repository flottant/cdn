const rootElement=document.documentElement,darkModeStorageKey="user-color-scheme",darkModeMediaQueryKey="--hty-mode",rootElementDarkModeAttributeName="data-user-color-scheme",setLS=(k,v)=>{try{localStorage.setItem(k,v)}catch(e){console.log(e.message)}},removeLS=k=>{try{localStorage.removeItem(k)}catch(e){console.log(e.message)}},getLS=k=>{try{return localStorage.getItem(k)}catch(e){return console.log(e.message),null}},getModeFromCSSMediaQuery=()=>window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",resetRootDarkModeAttributeAndLS=()=>{rootElement.removeAttribute("data-user-color-scheme"),removeLS(darkModeStorageKey)},validColorModeKeys={dark:!0,light:!0},applyCustomDarkModeSettings=mode=>{const currentSetting=mode||getLS(darkModeStorageKey);currentSetting===getModeFromCSSMediaQuery()?resetRootDarkModeAttributeAndLS():validColorModeKeys[currentSetting]?rootElement.setAttribute("data-user-color-scheme",currentSetting):resetRootDarkModeAttributeAndLS()},invertDarkModeObj={dark:"light",light:"dark"},toggleCustomDarkMode=()=>{let currentSetting=getLS(darkModeStorageKey);if(validColorModeKeys[currentSetting])currentSetting=invertDarkModeObj[currentSetting];else{if(null!==currentSetting)return;currentSetting=invertDarkModeObj[getModeFromCSSMediaQuery()]}return setLS(darkModeStorageKey,currentSetting),currentSetting};function bindToggleButton(){document.getElementById("toggle-mode-btn").addEventListener("click",()=>{const mode=toggleCustomDarkMode();applyCustomDarkModeSettings(mode),toggleCodeblockCss(mode)})}function toggleCodeblockCss(mode){const invertMode=invertDarkModeObj[mode];document.getElementById(`${invertMode}-prism-css`).setAttribute("media","(prefers-color-scheme: no-preference)"),document.getElementById(`${mode}-prism-css`).removeAttribute("media")}applyCustomDarkModeSettings(),document.addEventListener("DOMContentLoaded",bindToggleButton),document.addEventListener("pjax:success",bindToggleButton);